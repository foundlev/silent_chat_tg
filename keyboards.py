from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import config
import utils


def agreement_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='‚òëÔ∏è –Ø –ø—Ä–∏–Ω–∏–º–∞—é –ø—Ä–∞–≤–∏–ª–∞', callback_data=f"agree_{user_id}"))
    return kb


def rename_group_menu(leader_id: int, group_name: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    group_name = group_name.replace(" ", "-")
    kb.add(InlineKeyboardButton(text='‚òëÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É', callback_data=f"renamegroup_{leader_id}_{group_name}"))
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{leader_id}"))
    return kb


def create_group_menu(leader_id: int, group_name: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    group_name = group_name.replace(" ", "-")
    kb.add(InlineKeyboardButton(text='‚òëÔ∏è –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É', callback_data=f"newgroup_{leader_id}_{group_name}"))
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{leader_id}"))
    return kb


def unbank_menu(user_id: int, password: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    kb.add(InlineKeyboardButton(text='üí∏ –°–Ω—è—Ç—å –º–æ–Ω–µ—Ç–∫–∏', callback_data=f"unbank_{user_id}_{password}"))
    kb.add(InlineKeyboardButton(text='üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫ —Å–µ–±–µ', callback_data=f"relinkbank_{user_id}_{password}"))
    kb.add(InlineKeyboardButton(text='üîë –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å', callback_data=f"changebank_{user_id}"))
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}"))

    return kb


def up_protect_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    kb.add(InlineKeyboardButton(text='üí∑ –û–ø–ª–∞—Ç–∏—Ç—å –∏ —É–ª—É—á—à–∏—Ç—å', callback_data=f"doupprotect_{user_id}"))
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}"))

    return kb


def post_ad_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    kb.add(InlineKeyboardButton(text='üí∑ –û–ø–ª–∞—Ç–∏—Ç—å –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data=f"create_ad_{user_id}"))
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}"))

    return kb


def mybank_menu(user_id: int, confirmed: bool) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    if confirmed:
        kb.add(InlineKeyboardButton(text='üí∑ –û–ø–ª–∞—Ç–∏—Ç—å –∏ —É–ª—É—á—à–∏—Ç—å', callback_data=f"doupmybank_{user_id}"))
        kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}"))
    else:
        kb.add(InlineKeyboardButton(text='üÜô –£–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç', callback_data=f"upmybank_{user_id}"))
        kb.add(InlineKeyboardButton(text='‚è¨ –£–º–µ–Ω—å—à–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç', callback_data=f"backupgrade_{user_id}"))
        kb.add(InlineKeyboardButton(text='üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –≤–∑–ª–æ–º–∞', callback_data=f"upprotect_{user_id}"))
    return kb


def answer_letter_menu(from_id: int, user_id: int, dialog_id: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    kb.add(InlineKeyboardButton(text='üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f"answ_{from_id}_{user_id}_{dialog_id}"))

    return kb


def back_upgrading_mybank_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    kb.add(InlineKeyboardButton(text='‚èÆÔ∏è –û—Ç–∫–∞—Ç–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ', callback_data=f"dobackupgrade_{user_id}"))
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}"))

    return kb


def invite_group_menu(to_user_id: int, group_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='üíµ –û–ø–ª–∞—Ç–∏—Ç—å –∏ –≤—Å—Ç—É–ø–∏—Ç—å', callback_data=f"joingroup_{to_user_id}_{group_id}"))
    return kb


def change_policy_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='üèß –ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–≤', callback_data=f"changepolicy_{user_id}"))
    return kb


def cancel_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}"))
    return kb


def leader_group_menu(leader_id: int, group_id: int, confirmed: bool) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    if confirmed:
        kb.add(
            InlineKeyboardButton(text='üíµ –û–ø–ª–∞—Ç–∏—Ç—å –∏ –ø–æ–≤—ã—Å–∏—Ç—å', callback_data=f"doupgroup_{leader_id}_{group_id}"),
            InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{leader_id}")
        )
    else:
        kb.add(InlineKeyboardButton(text='üÜô –ü–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å', callback_data=f"upgroup_{leader_id}_{group_id}"))
        kb.add(InlineKeyboardButton(text='üìë –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data=f"memberslist_{leader_id}_{group_id}"))
        kb.add(InlineKeyboardButton(text='üöÆ –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data=f"removegroup_{leader_id}_{group_id}"))

    return kb


def removing_group_menu(leader_id: int, group_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(
        InlineKeyboardButton(text='üöÆ –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data=f"doremovegroup_{leader_id}_{group_id}"),
        InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{leader_id}")
    )
    return kb


def msg_code_menu(user_id: int, has_code: bool, confirmed: bool = False) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=2)

    if has_code:
        if confirmed:
            kb.add(
                InlineKeyboardButton(text='üîÑ –°–æ–∑–¥–∞—Ç—å –∫–æ–¥', callback_data=f"dorecreate_msg_code_{user_id}"),
                InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}")
            )
        else:
            kb.add(InlineKeyboardButton(text='üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–æ–¥', callback_data=f"recreate_msg_code_{user_id}"))
    else:
        kb.add(InlineKeyboardButton(text='üîÑ –°–æ–∑–¥–∞—Ç—å –∫–æ–¥', callback_data=f"create_msg_code_{user_id}"))

    return kb


def hack_menu(user_id: int, bank_id: int, mb_password: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å', callback_data=f"hack_{user_id}_{bank_id}_{mb_password}"))
    return kb


def user_group_menu(user_id: int, group_id: int, confirmed: bool) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()

    if confirmed:
        kb.add(
            InlineKeyboardButton(text='‚≠ïÔ∏è –ü–æ–∫–∏–Ω—É—Ç—å', callback_data=f"doexitgroup_{user_id}_{group_id}"),
            InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{user_id}")
        )
    else:
        kb.add(InlineKeyboardButton(text='‚Ü©Ô∏è –ü–æ–∫–∏–Ω—É—Ç—å –≥—Ä—É–ø–ø—É', callback_data=f"exitgroup_{user_id}_{group_id}"))

    return kb


def member_removing_menu(to_user_id: int, group_id: int, from_user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(
        InlineKeyboardButton(text='‚≠ïÔ∏è –ò—Å–∫–ª—é—á–∏—Ç—å', callback_data=f"removemember_{to_user_id}_{group_id}"),
        InlineKeyboardButton(text='‚ùé –û—Ç–º–µ–Ω–∞', callback_data=f"cancel_{from_user_id}")
    )
    return kb


def crystal_buy_menu() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='üí∏ –ö—É–ø–∏—Ç—å 1 –∫—Ä–∏—Å—Ç–∞–ª–ª', callback_data="buy_crystal"))
    return kb


def market_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton(text='üí∏ –ö—É–ø–∏—Ç—å', callback_data=f"buy_crystals_{user_id}"),
        InlineKeyboardButton(text='üí∞ –ü—Ä–æ–¥–∞—Ç—å', callback_data=f"sell_crystals_{user_id}")
    )
    kb.add(
        InlineKeyboardButton(text='üíé –í–µ—Ä–Ω—É—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã', callback_data=f"getback_crystals_{user_id}"),
        InlineKeyboardButton(text='ü™ô –í–µ—Ä–Ω—É—Ç—å –º–æ–Ω–µ—Ç–∫–∏', callback_data=f"getback_coins_{user_id}")
    )
    return kb


def return_market_crystals_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã', callback_data=f"getback_crystals_{user_id}"))
    return kb


def return_market_coins_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å –º–æ–Ω–µ—Ç–∫–∏', callback_data=f"getback_coins_{user_id}"))
    return kb


def market_offers_menu(user_id: int, offers: tuple | list) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=1)
    buttons = []

    if not offers:
        buttons.append(InlineKeyboardButton(text=f"‚ÑπÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
                                            callback_data="empty"))
        buttons.append(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"back_market_{user_id}"))
        kb.add(*buttons)
        return kb

    other_users_offers = [o for o in offers if o['user_id'] != user_id]

    if not other_users_offers:
        buttons.append(InlineKeyboardButton(text=f"‚ùå –ù–∞ –±–∏—Ä–∂–µ —Ç–æ–ª—å–∫–æ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
                                            callback_data="empty"))

    for offer in offers[:10]:
        offer: dict

        price: int = offer["price"]
        crystals: int = offer["crystals"]

        direction = offer["direction"]

        assert direction in ('sell', 'buy'), "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –±–∏—Ä–∂–µ"

        if direction == "sell":
            if not buttons and other_users_offers:
                best_offer = other_users_offers[0]
                buttons.append(InlineKeyboardButton(text=f"–ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å 1 üíé –∑–∞ {utils.format_balance(best_offer['price'])} ü™ô",
                                                    callback_data=f"offer_{best_offer['offer_id']}_{user_id}"))

            buttons.append(InlineKeyboardButton(text=f"–¶–µ–Ω–∞: {utils.format_balance(price)} ü™ô "
                                                     f"| –ù–∞–ª–∏—á–∏–µ: {utils.format_balance(crystals)} üíé",
                                                callback_data="market_info_buy"))
        else:
            if not buttons and other_users_offers:
                best_offer = other_users_offers[0]
                buttons.append(InlineKeyboardButton(text=f"–ü—Ä–æ–¥–∞—Ç—å —Å–µ–π—á–∞—Å 1 üíé –∑–∞ {utils.format_balance(best_offer['price'])} ü™ô",
                                                    callback_data=f"offer_{best_offer['offer_id']}_{user_id}"))

            buttons.append(InlineKeyboardButton(text=f"–¶–µ–Ω–∞: {utils.format_balance(price)} ü™ô "
                                                     f"| –¢—Ä–µ–±—É–µ—Ç—Å—è: {utils.format_balance(crystals)} üíé",
                                                callback_data="market_info_sell"))

    buttons.append(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"back_market_{user_id}"))
    kb.add(*buttons)
    return kb


def delere_reports_menu(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text="‚ôªÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∂–∞–ª–æ–±—ã", callback_data=f"deletereports_{user_id}"))
    return kb


def casino_menu(user_id: int, bet_amount: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(row_width=3)

    game_code = utils.generate_phrase(lenght=6)
    modes = (
        ("verylow", config.GAME_VERY_LOW_MULTIPLIER),
        ("low", config.GAME_LOW_MULTIPLIER),
        ("middle", config.GAME_MIDDLE_MULTIPLIER),
        ("high", config.GAME_HIGH_MULTIPLIER),
        ("veryhigh", config.GAME_VERY_HIGH_MULTIPLIER),
    )

    buttons = [
        InlineKeyboardButton(text=f"x{mode[1]}", callback_data=f"game_{mode[0]}_{game_code}_{user_id}_{bet_amount}")
        for mode in modes
    ]
    kb.add(*buttons)

    return kb


def poll_menu(poll_id: int, votes_balance_distribution: dict | None = None,
              votes_count_distribution: dict | None = None) -> InlineKeyboardMarkup:
    if votes_balance_distribution is None:
        votes_balance_distribution = {}

    if votes_count_distribution is None:
        votes_count_distribution = {}

    percentage = utils.calc_votes_percentage(votes_balance_distribution)

    percent_fine = percentage.get("fine", "-")
    percent_mute = percentage.get("mute", "-")
    percent_ban = percentage.get("ban", "-")
    percent_mercy = percentage.get("mercy", "-")

    count_fine = votes_count_distribution.get("fine", "0")
    count_mute = votes_count_distribution.get("mute", "0")
    count_ban = votes_count_distribution.get("ban", "0")
    count_mercy = votes_count_distribution.get("mercy", "0")

    kb = InlineKeyboardMarkup()

    kb.add(InlineKeyboardButton(text=f'üí∞ –ò–∑—ä—è—Ç—å –º–æ–Ω–µ—Ç–∫–∏ [{count_fine} - {percent_fine}%]',
                                callback_data=f"poll_1_fine_{poll_id}"))
    kb.add(InlineKeyboardButton(text=f'üîá –í—ã–¥–∞—Ç—å –º—É—Ç [{count_mute} - {percent_mute}%]',
                                callback_data=f"poll_1_mute_{poll_id}"))
    kb.add(InlineKeyboardButton(text=f'‚õîÔ∏è –ò—Å–∫–ª—é—á–∏—Ç—å [{count_ban} - {percent_ban}%]',
                                callback_data=f"poll_1_ban_{poll_id}"))
    kb.add(InlineKeyboardButton(text=f'üòá –ü–æ–º–∏–ª–æ–≤–∞—Ç—å [{count_mercy} - {percent_mercy}%]',
                                callback_data=f"poll_1_mercy_{poll_id}"))

    return kb


def poll_url_menu(message_id) -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø—Ä–æ—Å—É', url=config.REF_BASE_CHAT + str(message_id)))
    return kb
